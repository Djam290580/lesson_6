# ---------------------------------------Полиморфизм----------------------------------------------------------
# Дословный перевод этого понятия — «имеющий многие формы».
# В методологии ООП — это способность объекта иметь различную функциональность.
# В программировании полиморфизм проявляется в перегрузке или переопределении методов классов.

#------------------ПЕРЕГРУЗКА МЕТОДОВ--------------------------------------------------------------------------------
# класс Auto
class Auto:
    def auto_start(self, param_1, param_2=None):
        if param_2 is not None:
            print(param_1 + param_2)
        else:
            print(param_1)

a = Auto()
a.auto_start(50)
a = Auto()
a.auto_start(10, 20)

#-----------------------------Переопределение методов----------------------------------------------------------------

# Переопределение методов в полиморфизме выражается в наличии метода с одинаковым названием
# для родительского и дочернего классов. При этом логика методов различается, но названия идентичны.

# класс Transport
class Transport:
    def show_info(self):
        print("Родительский метод класса Transport")


# класс Auto, наследующий Transport
class Auto(Transport):
    def show_info(self):
        print("Родительский метод класса Auto")

# класс Bus, наследующий Transport
class Bus(Transport):
    def show_info(self):
        print("Родительский метод класса Bus")

# Теперь, если вызвать метод show_info(), результат будет зависеть от объекта, через который осуществляется вызов метода.

t = Transport()
t.show_info()

a = Auto()
a.show_info()

b = Bus()
b.show_info()